{
    "name": "local",
    "displayName": "Local",
    "description": "A Pulumi package for creating and managing Local cloud resources.",
    "keywords": [
        "pulumi",
        "category/cloud"
    ],
    "homepage": "https://www.pulumi.com/",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`local` Terraform Provider](https://github.com/terraform-providers/terraform-provider-local).",
    "repository": "https://github.com/pulumi/pulumi-local",
    "publisher": "Pulumi",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20"
        },
        "go": {
            "importBasePath": "github.com/pulumi/pulumi-local/sdk/go/local",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true
        },
        "nodejs": {
            "packageDescription": "A Pulumi package for creating and managing Local cloud resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-local)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-local` repo](https://github.com/pulumi/pulumi-local/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-local` repo](https://github.com/terraform-providers/terraform-provider-local/issues).",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/node": "^16.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true
        },
        "python": {
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            },
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-local)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-local` repo](https://github.com/pulumi/pulumi-local/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-local` repo](https://github.com/terraform-providers/terraform-provider-local/issues).",
            "compatibility": "tfbridge20",
            "pyproject": {
                "enabled": true
            }
        }
    },
    "config": {},
    "provider": {
        "description": "The provider type for the local package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n"
    },
    "resources": {
        "local:index/file:File": {
            "description": "## Example Usage\n\n",
            "properties": {
                "content": {
                    "type": "string",
                    "description": "Content to store in the file, expected to be a UTF-8 encoded string.\nConflicts with `sensitive_content`, `content_base64` and `source`.\nExactly one of these four arguments must be specified.\n"
                },
                "contentBase64": {
                    "type": "string",
                    "description": "Content to store in the file, expected to be binary encoded as base64 string.\nConflicts with `content`, `sensitive_content` and `source`.\nExactly one of these four arguments must be specified.\n"
                },
                "contentBase64sha256": {
                    "type": "string",
                    "description": "Base64 encoded SHA256 checksum of file content.\n"
                },
                "contentBase64sha512": {
                    "type": "string",
                    "description": "Base64 encoded SHA512 checksum of file content.\n"
                },
                "contentMd5": {
                    "type": "string",
                    "description": "MD5 checksum of file content.\n"
                },
                "contentSha1": {
                    "type": "string",
                    "description": "SHA1 checksum of file content.\n"
                },
                "contentSha256": {
                    "type": "string",
                    "description": "SHA256 checksum of file content.\n"
                },
                "contentSha512": {
                    "type": "string",
                    "description": "SHA512 checksum of file content.\n"
                },
                "directoryPermission": {
                    "type": "string",
                    "description": "Permissions to set for directories created (before umask), expressed as string in\n[numeric notation](https://en.wikipedia.org/wiki/File-system_permissions#Numeric_notation).\nDefault value is `\"0777\"`.\n"
                },
                "filePermission": {
                    "type": "string",
                    "description": "Permissions to set for the output file (before umask), expressed as string in\n[numeric notation](https://en.wikipedia.org/wiki/File-system_permissions#Numeric_notation).\nDefault value is `\"0777\"`.\n"
                },
                "filename": {
                    "type": "string",
                    "description": "The path to the file that will be created.\nMissing parent directories will be created.\nIf the file already exists, it will be overridden with the given content.\n"
                },
                "sensitiveContent": {
                    "type": "string",
                    "description": "Sensitive content to store in the file, expected to be an UTF-8 encoded string.\nWill not be displayed in diffs.\nConflicts with `content`, `content_base64` and `source`.\nExactly one of these four arguments must be specified.\nIf in need to use *sensitive* content, please use the `local.SensitiveFile`\nresource instead.\n",
                    "deprecationMessage": "Use the `local.SensitiveFile` resource instead",
                    "secret": true
                },
                "source": {
                    "type": "string",
                    "description": "Path to file to use as source for the one we are creating.\nConflicts with `content`, `sensitive_content` and `content_base64`.\nExactly one of these four arguments must be specified.\n"
                }
            },
            "required": [
                "contentBase64sha256",
                "contentBase64sha512",
                "contentMd5",
                "contentSha1",
                "contentSha256",
                "contentSha512",
                "directoryPermission",
                "filePermission",
                "filename"
            ],
            "inputProperties": {
                "content": {
                    "type": "string",
                    "description": "Content to store in the file, expected to be a UTF-8 encoded string.\nConflicts with `sensitive_content`, `content_base64` and `source`.\nExactly one of these four arguments must be specified.\n"
                },
                "contentBase64": {
                    "type": "string",
                    "description": "Content to store in the file, expected to be binary encoded as base64 string.\nConflicts with `content`, `sensitive_content` and `source`.\nExactly one of these four arguments must be specified.\n"
                },
                "directoryPermission": {
                    "type": "string",
                    "description": "Permissions to set for directories created (before umask), expressed as string in\n[numeric notation](https://en.wikipedia.org/wiki/File-system_permissions#Numeric_notation).\nDefault value is `\"0777\"`.\n"
                },
                "filePermission": {
                    "type": "string",
                    "description": "Permissions to set for the output file (before umask), expressed as string in\n[numeric notation](https://en.wikipedia.org/wiki/File-system_permissions#Numeric_notation).\nDefault value is `\"0777\"`.\n"
                },
                "filename": {
                    "type": "string",
                    "description": "The path to the file that will be created.\nMissing parent directories will be created.\nIf the file already exists, it will be overridden with the given content.\n"
                },
                "sensitiveContent": {
                    "type": "string",
                    "description": "Sensitive content to store in the file, expected to be an UTF-8 encoded string.\nWill not be displayed in diffs.\nConflicts with `content`, `content_base64` and `source`.\nExactly one of these four arguments must be specified.\nIf in need to use *sensitive* content, please use the `local.SensitiveFile`\nresource instead.\n",
                    "deprecationMessage": "Use the `local.SensitiveFile` resource instead",
                    "secret": true
                },
                "source": {
                    "type": "string",
                    "description": "Path to file to use as source for the one we are creating.\nConflicts with `content`, `sensitive_content` and `content_base64`.\nExactly one of these four arguments must be specified.\n"
                }
            },
            "requiredInputs": [
                "filename"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering File resources.\n",
                "properties": {
                    "content": {
                        "type": "string",
                        "description": "Content to store in the file, expected to be a UTF-8 encoded string.\nConflicts with `sensitive_content`, `content_base64` and `source`.\nExactly one of these four arguments must be specified.\n"
                    },
                    "contentBase64": {
                        "type": "string",
                        "description": "Content to store in the file, expected to be binary encoded as base64 string.\nConflicts with `content`, `sensitive_content` and `source`.\nExactly one of these four arguments must be specified.\n"
                    },
                    "contentBase64sha256": {
                        "type": "string",
                        "description": "Base64 encoded SHA256 checksum of file content.\n"
                    },
                    "contentBase64sha512": {
                        "type": "string",
                        "description": "Base64 encoded SHA512 checksum of file content.\n"
                    },
                    "contentMd5": {
                        "type": "string",
                        "description": "MD5 checksum of file content.\n"
                    },
                    "contentSha1": {
                        "type": "string",
                        "description": "SHA1 checksum of file content.\n"
                    },
                    "contentSha256": {
                        "type": "string",
                        "description": "SHA256 checksum of file content.\n"
                    },
                    "contentSha512": {
                        "type": "string",
                        "description": "SHA512 checksum of file content.\n"
                    },
                    "directoryPermission": {
                        "type": "string",
                        "description": "Permissions to set for directories created (before umask), expressed as string in\n[numeric notation](https://en.wikipedia.org/wiki/File-system_permissions#Numeric_notation).\nDefault value is `\"0777\"`.\n"
                    },
                    "filePermission": {
                        "type": "string",
                        "description": "Permissions to set for the output file (before umask), expressed as string in\n[numeric notation](https://en.wikipedia.org/wiki/File-system_permissions#Numeric_notation).\nDefault value is `\"0777\"`.\n"
                    },
                    "filename": {
                        "type": "string",
                        "description": "The path to the file that will be created.\nMissing parent directories will be created.\nIf the file already exists, it will be overridden with the given content.\n"
                    },
                    "sensitiveContent": {
                        "type": "string",
                        "description": "Sensitive content to store in the file, expected to be an UTF-8 encoded string.\nWill not be displayed in diffs.\nConflicts with `content`, `content_base64` and `source`.\nExactly one of these four arguments must be specified.\nIf in need to use *sensitive* content, please use the `local.SensitiveFile`\nresource instead.\n",
                        "deprecationMessage": "Use the `local.SensitiveFile` resource instead",
                        "secret": true
                    },
                    "source": {
                        "type": "string",
                        "description": "Path to file to use as source for the one we are creating.\nConflicts with `content`, `sensitive_content` and `content_base64`.\nExactly one of these four arguments must be specified.\n"
                    }
                },
                "type": "object"
            }
        },
        "local:index/sensitiveFile:SensitiveFile": {
            "description": "## Example Usage\n\n",
            "properties": {
                "content": {
                    "type": "string",
                    "description": "Sensitive Content to store in the file, expected to be a UTF-8 encoded string.\nConflicts with `content_base64` and `source`.\nExactly one of these three arguments must be specified.\n",
                    "secret": true
                },
                "contentBase64": {
                    "type": "string",
                    "description": "Sensitive Content to store in the file, expected to be binary encoded as base64 string.\nConflicts with `content` and `source`.\nExactly one of these three arguments must be specified.\n",
                    "secret": true
                },
                "contentBase64sha256": {
                    "type": "string",
                    "description": "Base64 encoded SHA256 checksum of file content.\n"
                },
                "contentBase64sha512": {
                    "type": "string",
                    "description": "Base64 encoded SHA512 checksum of file content.\n"
                },
                "contentMd5": {
                    "type": "string",
                    "description": "MD5 checksum of file content.\n"
                },
                "contentSha1": {
                    "type": "string",
                    "description": "SHA1 checksum of file content.\n"
                },
                "contentSha256": {
                    "type": "string",
                    "description": "SHA256 checksum of file content.\n"
                },
                "contentSha512": {
                    "type": "string",
                    "description": "SHA512 checksum of file content.\n"
                },
                "directoryPermission": {
                    "type": "string",
                    "description": "Permissions to set for directories created (before umask), expressed as string in\n[numeric notation](https://en.wikipedia.org/wiki/File-system_permissions#Numeric_notation).\nDefault value is `\"0700\"`.\n"
                },
                "filePermission": {
                    "type": "string",
                    "description": "Permissions to set for the output file (before umask), expressed as string in\n[numeric notation](https://en.wikipedia.org/wiki/File-system_permissions#Numeric_notation).\nDefault value is `\"0700\"`.\n"
                },
                "filename": {
                    "type": "string",
                    "description": "The path to the file that will be created.\nMissing parent directories will be created.\nIf the file already exists, it will be overridden with the given content.\n"
                },
                "source": {
                    "type": "string",
                    "description": "Path to file to use as source for the one we are creating.\nConflicts with `content` and `content_base64`.\nExactly one of these three arguments must be specified.\n"
                }
            },
            "required": [
                "contentBase64sha256",
                "contentBase64sha512",
                "contentMd5",
                "contentSha1",
                "contentSha256",
                "contentSha512",
                "directoryPermission",
                "filePermission",
                "filename"
            ],
            "inputProperties": {
                "content": {
                    "type": "string",
                    "description": "Sensitive Content to store in the file, expected to be a UTF-8 encoded string.\nConflicts with `content_base64` and `source`.\nExactly one of these three arguments must be specified.\n",
                    "secret": true
                },
                "contentBase64": {
                    "type": "string",
                    "description": "Sensitive Content to store in the file, expected to be binary encoded as base64 string.\nConflicts with `content` and `source`.\nExactly one of these three arguments must be specified.\n",
                    "secret": true
                },
                "directoryPermission": {
                    "type": "string",
                    "description": "Permissions to set for directories created (before umask), expressed as string in\n[numeric notation](https://en.wikipedia.org/wiki/File-system_permissions#Numeric_notation).\nDefault value is `\"0700\"`.\n"
                },
                "filePermission": {
                    "type": "string",
                    "description": "Permissions to set for the output file (before umask), expressed as string in\n[numeric notation](https://en.wikipedia.org/wiki/File-system_permissions#Numeric_notation).\nDefault value is `\"0700\"`.\n"
                },
                "filename": {
                    "type": "string",
                    "description": "The path to the file that will be created.\nMissing parent directories will be created.\nIf the file already exists, it will be overridden with the given content.\n"
                },
                "source": {
                    "type": "string",
                    "description": "Path to file to use as source for the one we are creating.\nConflicts with `content` and `content_base64`.\nExactly one of these three arguments must be specified.\n"
                }
            },
            "requiredInputs": [
                "filename"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SensitiveFile resources.\n",
                "properties": {
                    "content": {
                        "type": "string",
                        "description": "Sensitive Content to store in the file, expected to be a UTF-8 encoded string.\nConflicts with `content_base64` and `source`.\nExactly one of these three arguments must be specified.\n",
                        "secret": true
                    },
                    "contentBase64": {
                        "type": "string",
                        "description": "Sensitive Content to store in the file, expected to be binary encoded as base64 string.\nConflicts with `content` and `source`.\nExactly one of these three arguments must be specified.\n",
                        "secret": true
                    },
                    "contentBase64sha256": {
                        "type": "string",
                        "description": "Base64 encoded SHA256 checksum of file content.\n"
                    },
                    "contentBase64sha512": {
                        "type": "string",
                        "description": "Base64 encoded SHA512 checksum of file content.\n"
                    },
                    "contentMd5": {
                        "type": "string",
                        "description": "MD5 checksum of file content.\n"
                    },
                    "contentSha1": {
                        "type": "string",
                        "description": "SHA1 checksum of file content.\n"
                    },
                    "contentSha256": {
                        "type": "string",
                        "description": "SHA256 checksum of file content.\n"
                    },
                    "contentSha512": {
                        "type": "string",
                        "description": "SHA512 checksum of file content.\n"
                    },
                    "directoryPermission": {
                        "type": "string",
                        "description": "Permissions to set for directories created (before umask), expressed as string in\n[numeric notation](https://en.wikipedia.org/wiki/File-system_permissions#Numeric_notation).\nDefault value is `\"0700\"`.\n"
                    },
                    "filePermission": {
                        "type": "string",
                        "description": "Permissions to set for the output file (before umask), expressed as string in\n[numeric notation](https://en.wikipedia.org/wiki/File-system_permissions#Numeric_notation).\nDefault value is `\"0700\"`.\n"
                    },
                    "filename": {
                        "type": "string",
                        "description": "The path to the file that will be created.\nMissing parent directories will be created.\nIf the file already exists, it will be overridden with the given content.\n"
                    },
                    "source": {
                        "type": "string",
                        "description": "Path to file to use as source for the one we are creating.\nConflicts with `content` and `content_base64`.\nExactly one of these three arguments must be specified.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "local:index/getFile:getFile": {
            "description": "Reads a file from the local filesystem.\n\n",
            "inputs": {
                "description": "A collection of arguments for invoking getFile.\n",
                "properties": {
                    "filename": {
                        "type": "string",
                        "description": "Path to the file that will be read. The data source will return an error if the file does not exist.\n"
                    }
                },
                "type": "object",
                "required": [
                    "filename"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFile.\n",
                "properties": {
                    "content": {
                        "description": "Raw content of the file that was read, as UTF-8 encoded string. Files that do not contain UTF-8 text will have invalid UTF-8 sequences in `content`\nreplaced with the Unicode replacement character.\n",
                        "type": "string"
                    },
                    "contentBase64": {
                        "description": "Base64 encoded version of the file content (use this when dealing with binary data).\n",
                        "type": "string"
                    },
                    "contentBase64sha256": {
                        "description": "Base64 encoded SHA256 checksum of file content.\n",
                        "type": "string"
                    },
                    "contentBase64sha512": {
                        "description": "Base64 encoded SHA512 checksum of file content.\n",
                        "type": "string"
                    },
                    "contentMd5": {
                        "description": "MD5 checksum of file content.\n",
                        "type": "string"
                    },
                    "contentSha1": {
                        "description": "SHA1 checksum of file content.\n",
                        "type": "string"
                    },
                    "contentSha256": {
                        "description": "SHA256 checksum of file content.\n",
                        "type": "string"
                    },
                    "contentSha512": {
                        "description": "SHA512 checksum of file content.\n",
                        "type": "string"
                    },
                    "filename": {
                        "description": "Path to the file that will be read. The data source will return an error if the file does not exist.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The hexadecimal encoding of the SHA1 checksum of the file content.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "content",
                    "contentBase64",
                    "contentBase64sha256",
                    "contentBase64sha512",
                    "contentMd5",
                    "contentSha1",
                    "contentSha256",
                    "contentSha512",
                    "filename",
                    "id"
                ],
                "type": "object"
            }
        },
        "local:index/getSensitiveFile:getSensitiveFile": {
            "description": "Reads a file that contains sensitive data, from the local filesystem.\n\nThe attributes exposed by this data source are marked as\nsensitive.\n\n",
            "inputs": {
                "description": "A collection of arguments for invoking getSensitiveFile.\n",
                "properties": {
                    "filename": {
                        "type": "string",
                        "description": "Path to the file that will be read. The data source will return an error if the file does not exist.\n"
                    }
                },
                "type": "object",
                "required": [
                    "filename"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSensitiveFile.\n",
                "properties": {
                    "content": {
                        "description": "Raw content of the file that was read, as UTF-8 encoded string. Files that do not contain UTF-8 text will have invalid UTF-8 sequences in `content`\nreplaced with the Unicode replacement character.\n",
                        "secret": true,
                        "type": "string"
                    },
                    "contentBase64": {
                        "description": "Base64 encoded version of the file content (use this when dealing with binary data).\n",
                        "secret": true,
                        "type": "string"
                    },
                    "contentBase64sha256": {
                        "description": "Base64 encoded SHA256 checksum of file content.\n",
                        "type": "string"
                    },
                    "contentBase64sha512": {
                        "description": "Base64 encoded SHA512 checksum of file content.\n",
                        "type": "string"
                    },
                    "contentMd5": {
                        "description": "MD5 checksum of file content.\n",
                        "type": "string"
                    },
                    "contentSha1": {
                        "description": "SHA1 checksum of file content.\n",
                        "type": "string"
                    },
                    "contentSha256": {
                        "description": "SHA256 checksum of file content.\n",
                        "type": "string"
                    },
                    "contentSha512": {
                        "description": "SHA512 checksum of file content.\n",
                        "type": "string"
                    },
                    "filename": {
                        "description": "Path to the file that will be read. The data source will return an error if the file does not exist.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The hexadecimal encoding of the SHA1 checksum of the file content.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "content",
                    "contentBase64",
                    "contentBase64sha256",
                    "contentBase64sha512",
                    "contentMd5",
                    "contentSha1",
                    "contentSha256",
                    "contentSha512",
                    "filename",
                    "id"
                ],
                "type": "object"
            }
        }
    }
}