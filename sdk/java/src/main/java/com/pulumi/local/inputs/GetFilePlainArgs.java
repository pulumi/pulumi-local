// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.local.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetFilePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetFilePlainArgs Empty = new GetFilePlainArgs();

    /**
     * Path to the file that will be read. The data source will return an error if the file does not exist.
     * 
     */
    @Import(name="filename", required=true)
    private String filename;

    /**
     * @return Path to the file that will be read. The data source will return an error if the file does not exist.
     * 
     */
    public String filename() {
        return this.filename;
    }

    private GetFilePlainArgs() {}

    private GetFilePlainArgs(GetFilePlainArgs $) {
        this.filename = $.filename;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFilePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFilePlainArgs $;

        public Builder() {
            $ = new GetFilePlainArgs();
        }

        public Builder(GetFilePlainArgs defaults) {
            $ = new GetFilePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filename Path to the file that will be read. The data source will return an error if the file does not exist.
         * 
         * @return builder
         * 
         */
        public Builder filename(String filename) {
            $.filename = filename;
            return this;
        }

        public GetFilePlainArgs build() {
            $.filename = Objects.requireNonNull($.filename, "expected parameter 'filename' to be non-null");
            return $;
        }
    }

}
