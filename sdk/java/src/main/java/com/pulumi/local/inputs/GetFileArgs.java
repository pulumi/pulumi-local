// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.local.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetFileArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetFileArgs Empty = new GetFileArgs();

    /**
     * Path to the file that will be read. The data source will return an error if the file does not exist.
     * 
     */
    @Import(name="filename", required=true)
    private Output<String> filename;

    /**
     * @return Path to the file that will be read. The data source will return an error if the file does not exist.
     * 
     */
    public Output<String> filename() {
        return this.filename;
    }

    private GetFileArgs() {}

    private GetFileArgs(GetFileArgs $) {
        this.filename = $.filename;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFileArgs $;

        public Builder() {
            $ = new GetFileArgs();
        }

        public Builder(GetFileArgs defaults) {
            $ = new GetFileArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filename Path to the file that will be read. The data source will return an error if the file does not exist.
         * 
         * @return builder
         * 
         */
        public Builder filename(Output<String> filename) {
            $.filename = filename;
            return this;
        }

        /**
         * @param filename Path to the file that will be read. The data source will return an error if the file does not exist.
         * 
         * @return builder
         * 
         */
        public Builder filename(String filename) {
            return filename(Output.of(filename));
        }

        public GetFileArgs build() {
            if ($.filename == null) {
                throw new MissingRequiredPropertyException("GetFileArgs", "filename");
            }
            return $;
        }
    }

}
