// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.local;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import com.pulumi.local.Utilities;
import com.pulumi.local.inputs.GetFileArgs;
import com.pulumi.local.inputs.GetFilePlainArgs;
import com.pulumi.local.inputs.GetSensitiveFileArgs;
import com.pulumi.local.inputs.GetSensitiveFilePlainArgs;
import com.pulumi.local.outputs.GetFileResult;
import com.pulumi.local.outputs.GetSensitiveFileResult;
import java.util.concurrent.CompletableFuture;

public final class LocalFunctions {
    /**
     * Reads a file from the local filesystem.
     * 
     */
    public static Output<GetFileResult> getFile(GetFileArgs args) {
        return getFile(args, InvokeOptions.Empty);
    }
    /**
     * Reads a file from the local filesystem.
     * 
     */
    public static CompletableFuture<GetFileResult> getFilePlain(GetFilePlainArgs args) {
        return getFilePlain(args, InvokeOptions.Empty);
    }
    /**
     * Reads a file from the local filesystem.
     * 
     */
    public static Output<GetFileResult> getFile(GetFileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("local:index/getFile:getFile", TypeShape.of(GetFileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Reads a file from the local filesystem.
     * 
     */
    public static Output<GetFileResult> getFile(GetFileArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("local:index/getFile:getFile", TypeShape.of(GetFileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Reads a file from the local filesystem.
     * 
     */
    public static CompletableFuture<GetFileResult> getFilePlain(GetFilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("local:index/getFile:getFile", TypeShape.of(GetFileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Reads a file that contains sensitive data, from the local filesystem.
     * 
     * The attributes exposed by this data source are marked as
     * sensitive.
     * 
     */
    public static Output<GetSensitiveFileResult> getSensitiveFile(GetSensitiveFileArgs args) {
        return getSensitiveFile(args, InvokeOptions.Empty);
    }
    /**
     * Reads a file that contains sensitive data, from the local filesystem.
     * 
     * The attributes exposed by this data source are marked as
     * sensitive.
     * 
     */
    public static CompletableFuture<GetSensitiveFileResult> getSensitiveFilePlain(GetSensitiveFilePlainArgs args) {
        return getSensitiveFilePlain(args, InvokeOptions.Empty);
    }
    /**
     * Reads a file that contains sensitive data, from the local filesystem.
     * 
     * The attributes exposed by this data source are marked as
     * sensitive.
     * 
     */
    public static Output<GetSensitiveFileResult> getSensitiveFile(GetSensitiveFileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("local:index/getSensitiveFile:getSensitiveFile", TypeShape.of(GetSensitiveFileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Reads a file that contains sensitive data, from the local filesystem.
     * 
     * The attributes exposed by this data source are marked as
     * sensitive.
     * 
     */
    public static Output<GetSensitiveFileResult> getSensitiveFile(GetSensitiveFileArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("local:index/getSensitiveFile:getSensitiveFile", TypeShape.of(GetSensitiveFileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Reads a file that contains sensitive data, from the local filesystem.
     * 
     * The attributes exposed by this data source are marked as
     * sensitive.
     * 
     */
    public static CompletableFuture<GetSensitiveFileResult> getSensitiveFilePlain(GetSensitiveFilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("local:index/getSensitiveFile:getSensitiveFile", TypeShape.of(GetSensitiveFileResult.class), args, Utilities.withVersion(options));
    }
}
